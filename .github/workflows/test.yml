name: ci
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

jobs:
  test-linux:
    name: test linux-${{ matrix.toolchain }}${{ matrix.target != '' && '-' || '' }}${{ matrix.target }}
    env:
      CARGO_TERM_COLOR: always
      TARGET_DIR: ./target
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
        target:
          [
            "",
            "x86_64-unknown-linux-musl",
            "aarch64-unknown-linux-gnu",
            "aarch64-unknown-linux-musl",
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustc --version

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest #, cross

      - name: Set up cross
        # if: matrix.target != ''
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu musl-tools
          echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      # - name: Run tests (cross)
      #   if: matrix.target != ''
      #   run: cross test --verbose --bins --target ${{ matrix.target }}

      - name: Run tests (cargo)
        # if: matrix.target == ''
        run: cargo nextest run --verbose --bins ${{ matrix.target != '' && '--target ' || '' }}${{ matrix.target }}

      - name: Upload debug artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.toolchain }}${{ matrix.target != '' && '-' || '' }}${{ matrix.target }}-debug
          path: |
            ${{ env.TARGET_DIR }}/debug/mcdl*
            !${{ env.TARGET_DIR }}/debug/mcdl.d

# jobs:
#   test:
#     name: test ${{ matrix.build }}
#     env:
#       CARGO: cargo
#       TARGET_FLAGS: ""
#       TARGET_DIR: ./target
#       TEST_FLAGS: ""
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         toolchain: [stable, nightly]
#         build:
#           [
#             win-msvc,
#             win-gnu,
#           ]
#         include:
#           - build: win-msvc
#             os: windows-2022
#           - build: win-gnu
#             os: windows-2022
#             toolchain: nightly-x86_64-gnu

#   trigger_build:
#     name: trigger build
#     needs: test
#     uses: ./.github/workflows/build.yml
