name: CI

on:
  push:
    branches: [main]
  pull_request: {}

env:
  # Disable incremental compilation.
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  check:
    name: cargo check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: dtolnay/rust-toolchain@stable
    - name: Check
      run: cargo check --all --tests --benches

  style:
    name: cargo fmt
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: rustfmt
      run: cargo fmt --all -- --check

  warnings:
    runs-on: ubuntu-latest
    needs: check
    steps:
    - uses: actions/checkout@v5
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all --examples --tests --benches -- -D warnings

  test:
    # Test against stable Rust across macOS, Windows, and Linux, and against
    # beta and nightly rust on Ubuntu.
    name: "cargo test (${{ matrix.rust }} on ${{ matrix.os }})"
    needs: check
    strategy:
      matrix:
        # test all Rust versions on ubuntu-latest
        os: [ubuntu-latest]
        rust: [stable, beta, nightly]
        # test stable Rust on Windows and MacOS as well
        include:
          - rust: stable
            os: windows-latest
          - rust: stable
            os: macos-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v5
    - name: "install Rust ${{ matrix.rust }}"
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: install cargo-nextest
      uses: taiki-e/install-action@nextest
    - name: Run tests
      run: cargo nextest run --profile ci --workspace
    # - name: Publish Test Report
    #   uses: mikepenz/action-junit-report@v3
    #   if: always() # always run even if the previous step fails
    #   with:
    #     report_paths: 'target/nextest/ci/junit.xml'
    #     check_name: "cargo test (Rust ${{ matrix.rust }} on ${{ matrix.os }})"
    #     check_title_template: "{{SUITE_NAME}}::{{TEST_NAME}}"
    - name: Run doctests
      run: cargo test --doc --workspace

  all:
    name: "all systems go!"
    runs-on: ubuntu-latest
    needs: [style, test]
    steps:
      - run: exit 0